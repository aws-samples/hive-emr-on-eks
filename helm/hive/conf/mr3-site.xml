<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>

<property>
  <name>mr3.runtime</name>
  <value>tez</value>
</property>

<property>
  <name>mr3.cluster.use.hadoop-libs</name>
  <value>false</value>
</property>

<property>
  <name>mr3.lib.uris</name>
  <value></value>
</property>

<property>
  <name>mr3.aux.uris</name>
  <value></value>
</property>

<!-- add for LocalProcess with Kerberos
     -Djava.security.krb5.conf=/opt/mr3-run/conf/krb5.conf -->
<!-- additional options:
     -Djavax.security.auth.useSubjectCredsOnly=false
     -Djava.security.auth.login.config=/opt/mr3-run/conf/jgss.conf
     -Dsun.security.jgss.debug=true -->
<!-- add-opens java.base/java.lang=ALL-UNNAMED is added by run-master.sh -->
<property>
  <name>mr3.am.launch.cmd-opts</name>
  <value>-XX:+AlwaysPreTouch -Xss512k -XX:+UseG1GC -XX:+ResizeTLAB -XX:+UseNUMA -XX:InitiatingHeapOccupancyPercent=40 -XX:G1ReservePercent=20 -XX:MaxGCPauseMillis=200 -XX:MetaspaceSize=1024m -server -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -Dhadoop.metrics.log.level=WARN -Dlog4j.configurationFile=k8s-mr3-container-log4j2.properties -Djavax.net.ssl.trustStore=/opt/mr3-run/key/hivemr3-ssl-certificate.jks -Djavax.net.ssl.trustStoreType=jks</value>
</property>

<property>
  <name>mr3.am.staging-dir</name>
  <value></value>
</property>

<property>
  <name>mr3.am.generate.dag.graph.viz</name>
  <value>false</value>
</property>

<property>
  <name>mr3.container.kill.policy</name>
  <value>container.kill.wait.workervertex</value>
  <description>
    container.kill.wait.workervertex: wait until WorkerVertexes terminate
    container.kill.nowait: kill without waiting 
  </description>
</property>

<property>
  <name>mr3.am.max.num.concurrent.dags</name>
  <value>32</value>
</property>

<property>
  <name>mr3.dag.queue.scheme</name>
  <value>common</value>
</property>

<property>
  <name>mr3.dag.priority.scheme</name>
  <value>fifo</value>
</property>

<property>
  <name>mr3.vertex.priority.scheme</name>
  <value>intact</value>
</property>

<property>
  <name>mr3.am.task.max.failed.attempts</name>
  <value>3</value>
</property>

<property>
  <name>mr3.am.task.retry.on.fatal.error</name>
  <value>true</value>
</property>

<property>
  <name>mr3.am.task.no.retry.errors</name>
  <value>MapJoinMemoryExhaustionError,OutOfMemoryError</value>
</property>

<property>
  <name>mr3.am.client.thread-count</name>
  <value>32</value>
</property>

<property>
  <name>mr3.async.logging</name>
  <value>true</value>
</property>

<property>
  <name>mr3.am.permit.custom.user.class</name>
  <value>true</value>
</property>

<!-- resource scheduler -->

<property>
  <name>mr3.am.resourcescheduler.max.requests.per.taskscheduler</name>
  <value>1000</value>
</property>

<!-- container -->

<!-- add-opens java.base/java.lang=ALL-UNNAMED is added by run-master.sh -->
<property>
  <name>mr3.container.launch.cmd-opts</name>
  <value>-XX:+AlwaysPreTouch -Xss512k -XX:+UseG1GC -XX:+ResizeTLAB -XX:+UseNUMA -XX:InitiatingHeapOccupancyPercent=40 -XX:G1ReservePercent=20 -XX:MaxGCPauseMillis=200 -XX:MetaspaceSize=1024m -server -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -Dlog4j.configurationFile=k8s-mr3-container-log4j2.properties -Djavax.net.ssl.trustStore=/opt/mr3-run/key/hivemr3-ssl-certificate.jks -Djavax.net.ssl.trustStoreType=jks</value>
</property>

<property>
  <name>mr3.container.reuse</name>
  <value>true</value>
</property>

<property>
  <name>mr3.container.stop.cross.dag.reuse</name>
  <value>false</value>
</property>

<property>
  <name>mr3.container.idle.timeout.ms</name>
  <value>3600000</value>
</property>

<property>
  <name>mr3.heartbeat.task.timeout.ms</name>
  <value>120000</value>
</property>

<property>
  <name>mr3.heartbeat.container.timeout.ms</name>
  <value>300000</value>
</property>

<property>
  <name>mr3.am.node-blacklisting.enabled</name>
  <value>false</value>
</property>

<property>
  <name>mr3.am.maxtaskfailure.percent</name>
  <value>1</value>
</property>

<property>
  <name>mr3.container.termination.checker.timeout.ms</name>
  <value>300000</value>
</property>

<!-- Kubernetes -->

<!-- mr3.master.mode is set in mr3-setup.sh --> 

<property>
  <name>mr3.am.acls.enabled</name>
  <value>false</value>
</property>

<property>
  <name>mr3.am.resource.memory.mb</name>
  <value>16384</value>
</property>

<property>
  <name>mr3.am.resource.cpu.cores</name>
  <value>4</value>
</property>

<property>
  <name>mr3.am.local.resourcescheduler.max.memory.mb</name>
  <value>8192</value>
</property>

<property>
  <name>mr3.am.local.resourcescheduler.max.cpu.cores</name>
  <value>8</value>
</property>

<property>
  <name>mr3.am.worker.mode</name>
  <value>kubernetes</value>
</property>

<property>
  <name>mr3.container.resourcescheduler.type</name>
  <value>kubernetes</value>
</property>

<!-- AWS_REGION for running on AWS EKS -->
<property>
  <name>mr3.am.launch.env</name>
  <value>LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/mr3-run/hadoop/apache-hadoop/lib/native,HADOOP_CREDSTORE_PASSWORD,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION,USE_JAVA_17</value>
</property>

<!-- $LD_LIBRARY_PATH is automatically expanded to the current value inside DAGAppMaster (from mr3.am.launch.env), so do not include it -->
<!-- AWS_REGION for running on AWS EKS -->
<property>
  <name>mr3.container.launch.env</name>
  <value>LD_LIBRARY_PATH=/opt/mr3-run/hadoop/apache-hadoop/lib/native,HADOOP_CREDSTORE_PASSWORD,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION,USE_JAVA_17</value>
</property>

<property>
  <name>mr3.am.delete.local.working-dir</name>
  <value>false</value>
</property>

<property>
  <name>mr3.am.local.working-dir</name>
  <value>/opt/mr3-run/am-local-dir/am-local-working-dir</value>
</property>

<property>
  <name>mr3.am.local.log-dir</name>
  <value>/opt/mr3-run/am-local-dir/am-local-log-dir</value>
</property>

<!-- These variables are all set in mr3/mr3-setup.sh:
  mr3.cluster.additional.classpath 
  mr3.principal
  mr3.keytab
  mr3.token.renewal.hdfs.enabled
  mr3.token.renewal.hive.enabled
 -->

<property>
  <name>mr3.token.renewal.pass.credentials.via.memory</name>
  <value>true</value>
</property>

<property>
  <name>mr3.am.token.renewal.paths</name>
  <value></value>
</property>

<!-- These variables are all set in mr3/mr3-setup.sh (for Kubernetes):
  mr3.k8s.namespace
  mr3.k8s.pod.master.serviceaccount
  mr3.k8s.pod.worker.serviceaccount
  mr3.k8s.pod.master.image
  mr3.k8s.pod.master.user
  mr3.k8s.master.working.dir
  mr3.k8s.master.persistentvolumeclaim.mounts
  mr3.k8s.pod.worker.image
  mr3.k8s.pod.worker.user
  mr3.k8s.worker.working.dir
  mr3.k8s.java.io.tmpdir
  mr3.k8s.worker.persistentvolumeclaim.mounts
  mr3.k8s.conf.dir.configmap
  mr3.k8s.conf.dir.mount.dir
  mr3.k8s.keytab.secret
  mr3.k8s.worker.secret
  mr3.k8s.mount.keytab.secret
  mr3.k8s.mount.worker.secret
  mr3.k8s.keytab.mount.dir
  mr3.k8s.keytab.mount.file
 -->

<property>
  <name>mr3.k8s.master.command</name>
  <value>/opt/mr3-run/hive/run-master.sh</value>
</property>

<property>
  <name>mr3.k8s.worker.command</name>
  <value>/opt/mr3-run/hive/run-worker.sh</value>
</property>

<property>
  <name>mr3.k8s.worker.total.max.memory.gb</name>
  <value>1048576</value>
</property>

<property>
  <name>mr3.k8s.worker.total.max.cpu.cores</name>
  <value>1048576</value>
</property>

<property>
  <name>mr3.k8s.pod.cpu.cores.max.multiplier</name>
  <value>1.0d</value>
</property>

<property>
  <name>mr3.k8s.pod.memory.max.multiplier</name>
  <value>1.0d</value>
</property>

<property>
  <name>mr3.k8s.api.server.url</name>
  <value>https://kubernetes.default.svc</value>
</property>

<property>
  <name>mr3.k8s.nodes.polling.interval.ms</name>
  <value>60000</value>
</property>

<property>
  <name>mr3.k8s.pods.polling.interval.ms</name>
  <value>15000</value>
</property>

<property>
  <name>mr3.container.command.num.waits.in.reserved</name>
  <value>360</value>
  <description>
    Ensure mr3.container.command.num.waits.in.reserved * 1 second > mr3.k8s.pod.creation.timeout.ms. 
  </description>
</property>

<property>
  <name>mr3.k8s.pod.creation.timeout.ms</name>
  <value>300000</value>
  <description>
    The default value of 30 seconds is too short on EKS.
  </description>
</property>

<property>
  <name>mr3.k8s.pod.master.node.selector</name>
  <value></value>
</property>

<property>
  <name>mr3.k8s.pod.master.toleration.specs</name>
  <value></value>
</property>

<property>
  <name>mr3.k8s.master.pod.affinity.match.label</name>
  <value>hivemr3_app=hiveserver2</value>
</property>

<property>
  <name>mr3.k8s.pod.worker.node.selector</name>
  <value></value>
</property>

<property>
  <name>mr3.k8s.pod.worker.toleration.specs</name>
  <value></value>
</property>

<property>
  <name>mr3.k8s.pod.image.pull.policy</name>
  <value>Always</value>
</property>

<property>
  <name>mr3.k8s.pod.image.pull.secrets</name>
  <value></value>
</property>

<property>
  <name>mr3.k8s.host.aliases</name>
  <value>database-1-instance-1.cn8svsalxpay.us-west-2.rds.amazonaws.com=192.168.51.50</value>
</property>

<property>
  <name>mr3.k8s.pod.master.emptydirs</name>
  <value>/opt/mr3-run/work-local-dir</value>
</property>

<property>
  <name>mr3.k8s.pod.master.hostpaths</name>
  <value></value>
</property>

<!--
<property>
  <name>mr3.k8s.pod.worker.emptydirs</name>
  <value>/opt/mr3-run/work-local-dir</value>
</property>
 -->

<!-- set to /ephemeral1 with instance storage mounted on /ephemeral1 for worker Pod on AWS EKS -->
<property>
  <name>mr3.k8s.pod.worker.hostpaths</name>
  <value>/data1/k8s</value>
</property>

<property>
  <name>mr3.k8s.pod.worker.additional.hostpaths</name>
  <value></value>
</property>

<property>
  <name>mr3.k8s.master.local.dir.persistentvolumes</name>
  <value></value>
</property>

<!--
<property>
  <name>mr3.k8s.worker.local.dir.persistentvolumes</name>
  <value>/opt/mr3-run/disk1,/opt/mr3-run/disk2</value>
</property>
 -->

<property>
  <name>mr3.k8s.local.dir.persistentvolume.storageclass</name>
  <value>gp2</value>
</property>

<property>
  <name>mr3.k8s.local.dir.persistentvolume.storage</name>
  <value>2Gi</value>
</property>

<property>
  <name>mr3.k8s.readiness.probe.initial.delay.secs</name>
  <value>15</value>
</property>

<property>
  <name>mr3.k8s.readiness.probe.period.secs</name>
  <value>15</value>
</property>

<property>
  <name>mr3.k8s.liveness.probe.initial.delay.secs</name>
  <value>30</value>
</property>

<property>
  <name>mr3.k8s.liveness.probe.period.secs</name>
  <value>30</value>
</property>

<property>
  <name>mr3.app.history.logging.enabled</name>
  <value>false</value>
</property>

<property>
  <name>mr3.dag.history.logging.enabled</name>
  <value>false</value>
</property>

<property>
  <name>mr3.task.history.logging.enabled</name>
  <value>false</value>
</property>

<property>
  <name>mr3.container.task.failure.num.sleeps</name>
  <value>0</value>
</property>

<!-- auto-scaling -->

<!-- set to true on AWS EKS -->
<property>
  <name>mr3.enable.auto.scaling</name>
  <value>false</value>
</property>

<property>
  <name>mr3.memory.usage.check.scheme</name>
  <value>average</value>
</property>

<property>
  <name>mr3.auto.scale.out.threshold.percent</name>
  <value>80</value>
</property>

<property>
  <name>mr3.auto.scale.in.threshold.percent</name>
  <value>50</value>
</property>

<property>
  <name>mr3.memory.usage.check.window.length.secs</name>
  <value>600</value>
</property>

<property>
  <name>mr3.check.memory.usage.event.interval.secs</name>
  <value>10</value>
</property>

<property>
  <name>mr3.auto.scale.out.grace.period.secs</name>
  <value>300</value>
</property>

<property>
  <name>mr3.auto.scale.in.delay.after.scale.out.secs</name>
  <value>300</value>
</property>

<property>
  <name>mr3.auto.scale.in.grace.period.secs</name>
  <value>90</value>
</property>

<property>
  <name>mr3.auto.scale.in.wait.dag.finished</name>
  <value>true</value>
</property>

<property>
  <name>mr3.auto.scale.out.num.initial.containers</name>
  <value>4</value>
</property>

<property>
  <name>mr3.auto.scale.out.num.increment.containers</name>
  <value>1</value>
</property>

<property>
  <name>mr3.auto.scale.in.num.decrement.hosts</name>
  <value>1</value>
</property>

<property>
  <name>mr3.auto.scale.in.min.hosts</name>
  <value>1</value>
</property>

<!-- set to false when using S3 instead of PersistentVolume on AWS EKS -->
<property>
  <name>mr3.am.staging.dir.check.ownership.permission</name>
  <value>false</value>
</property>

<property>
  <name>mr3.am.task.concurrent.run.threshold.percent</name>
  <value>100</value>
</property>

<property>
  <name>mr3.am.task.concurrent.run.enable.root.vertex</name>
  <value>true</value>
</property>

<!-- Fargate does not support privileged init containers -->
<property>
  <name>mr3.k8s.pod.worker.security.context.sysctls</name>
  <value>net.core.somaxconn=16384</value>
</property>

<!-- Fargate does not support privileged init containers -->
<property>
  <name>mr3.k8s.pod.worker.init.container.command</name>
  <value></value>
</property>

<property>
  <name>mr3.k8s.pod.worker.init.container.image</name>
  <value>busybox</value>
</property>

<property>
  <name>mr3.k8s.shufflehandler.process.memory.mb</name>
  <value>2048</value>
</property>

<property>
  <name>mr3.k8s.shuffle.process.ports</name>
  <value>15500,15510,15520,15530,15540,15550,15560,15570</value>
</property>

<!-- Prometheus -->

<property>
  <name>mr3.prometheus.enable.metrics</name>
  <value>false</value>
</property>

<property>
  <name>mr3.prometheus.enable.jvm.metrics</name>
  <value>false</value>
</property>

<property>
  <name>mr3.k8s.master.pod.additional.labels</name>
  <value>hivemr3_aux=prometheus</value>
</property>

<property>
  <name>mr3.prometheus.worker.enable.metrics</name>
  <value>false</value>
</property>

<property>
  <name>mr3.prometheus.worker.enable.jvm.metrics</name>
  <value>true</value>
</property>

<property>
  <name>mr3.prometheus.worker.httpserver.port</name>
  <value>9890</value>
</property>

<property>
  <name>dfs.namenode.delegation.token.renew-interval</name>
  <value>86400000</value>
  <description>
    Internally used by mr3.common.security.TokenRenewer when Kerberos token renewal is enabled inside DAGAppMaster and ContainerWorkers.
    Replaces org.apache.hadoop.hdfs.DFSConfigKeys.DFS_NAMENODE_DELEGATION_TOKEN_RENEW_INTERVAL_KEY.
  </description>
</property>

</configuration>
